# Makefile for %%_PROJECT_NAME_%%
# $Id:$

package	          = %%_PROJECT_NAME_%%
kahua		  = kahua
SHELL             = @SHELL@
prefix            = @prefix@
exec_prefix       = @exec_prefix@
bindir            = @bindir@
sbindir           = @sbindir@
libexecdir	  = @libexecdir@
datarootdir	  = @datarootdir@
datadir		  = @datadir@/$(kahua)
sysconfdir        = @sysconfdir@/$(kahua)
sharedstatedir    = @sharedstatedir@/$(kahua)
localstatedir     = @localstatedir@/$(kahua)
libdir            = @libdir@/$(kahua)
includedir        = @includedir@/$(kahua)
oldincludedir     = @oldincludedir@/$(kahua)
infodir           = @infodir@
mandir            = @mandir@
srcdir            = @srcdir@
VPATH             = $(srcdir)
top_builddir      = @top_builddir@
top_srcdir        = @top_srcdir@

DESTDIR  =

GOSH = @GOSH@
INSTALL = @INSTALL@
KAHUA_INSTALL = @KAHUA_INSTALL@
KAHUA_WORKING = $(localstatedir)
KAHUA_LIB     = $(libdir)

KAHUACONFIG = @KAHUACONFIG_OPTION@

%%_PROJECT_NAME_UP_%%_INPLACE = $(PWD)
TEST_DIR    = $(PWD)

%%_PROJECT_NAME_UP_%%_VERSION = $(shell cat $(top_srcdir)/VERSION)
%%_PROJECT_NAME_UP_%%_WORKING = $(%%_PROJECT_NAME_UP_%%_INPLACE)
%%_PROJECT_NAME_UP_%%CONFIG = -c $(%%_PROJECT_NAME_UP_%%_INPLACE)/$(package).conf

SCRIPTS	= $(package)-start $(package)-stop

SCRIPTFILES = $(package)/$(package).kahua $(package)/version.kahua

STATICFILES = $(package)/$(package).css

SOURCEDIR   = $(package)
PLUGINDIR   = plugins
PLUGINFILE  = $(package).scm

TEMPLATEDIR = templates
XMLFILES    = page.xml


ALL_TARGETS = $(SCRIPTS) $(package)/version.kahua $(package).conf \
		test/test.scm test/test.conf
CONFIG_GENERATED = Makefile config.log config.status autom4*.cache
MAKE_GENERATED =  $(ALL_TARGETS) tmp checkout
TEST_GENERATED = test/_tmp test/_work test/$(package)

.PHONY: all check clean distclean install maintainer-clean

all: $(ALL_TARGETS)

$(package)-start: $(package)-start.in
	sed -e "s@###%%_PROJECT_NAME_UP_%%_INPLACE###@$(%%_PROJECT_NAME_UP_%%_INPLACE)@" $? > $@
	chmod +x $@

$(package)-stop: $(package)-stop.in
	sed -e "s@###%%_PROJECT_NAME_UP_%%_INPLACE###@$(%%_PROJECT_NAME_UP_%%_INPLACE)@" $? > $@
	chmod +x $@

test/test.conf: test/test.conf.in
	sed -e "s@##TEST_DIR##@$(TEST_DIR)@" $? > $@

test/test.scm:	test/test.scm.in
	sed -e "s@##GOSH##@$(GOSH)@" -e "s@##PLUGINS##@$(PLUGINFILES)@" \
	    -e "s@##KAHUA_WORKING##@$(KAHUA_WORKING)@" \
	    -e "s@##KAHUA_LIB##@$(KAHUA_LIB)@" \
	    -e "s@##%%_PROJECT_NAME_UP_%%_VERSION##@$(%%_PROJECT_NAME_UP_%%_VERSION)@" \
	    $? > $@

$(package)/version.kahua: $(package)/version.kahua.in
	sed -e "s@###%%_PROJECT_NAME_UP_%%_VERSION###@$(%%_PROJECT_NAME_UP_%%_VERSION)@" $? > $@

$(package).conf: $(package).conf.in
	sed -e "s@###%%_PROJECT_NAME_UP_%%_INPLACE_SOCKETBASE###@$(%%_PROJECT_NAME_UP_%%_INPLACE)/tmp@" \
	    -e "s@###%%_PROJECT_NAME_UP_%%_INPLACE_WORKING###@$(%%_PROJECT_NAME_UP_%%_INPLACE)@" \
	    -e "s@###%%_PROJECT_NAME_UP_%%_INPLACE_DOCPATH###@$(%%_PROJECT_NAME_UP_%%_INPLACE)@" \
	    $? > $@
	test -L checkout || ln -s . checkout
	test -d tmp || mkdir tmp

check:  all
	rm -f test/test.log
	cd test; $(GOSH) -I$(KAHUA_LIB) ./test.scm > test.log

clean:
	rm -rf core *~ $(package)/*~ test/*~ test/test.log $(TEST_GENERATED) $(MAKE_GENERATED)

install: 
	$(KAHUA_INSTALL) $(KAHUACONFIG) -t script $(SCRIPTFILES)
	$(KAHUA_INSTALL) $(KAHUACONFIG) -t script --no-overwrite $(LOCALSCRIPTFILES)
	$(KAHUA_INSTALL) $(KAHUACONFIG) -t static --no-overwrite $(STATICFILES)
	$(KAHUA_INSTALL) $(KAHUACONFIG) -t plugin -r $(PLUGINFILE) \
                                        $(PLUGINDIR)/$(PLUGINFILE)
	for f in $(PLUGINFILES); do \
	  $(KAHUA_INSTALL) $(KAHUACONFIG) -t plugin -r $$f $(PLUGINDIR)/$$f;\
	done
	mkdir -p $(bindir)
	for f in $(XMLFILES); do \
	  $(KAHUA_INSTALL) $(KAHUACONFIG) -t template -r $(package)/$$f $(TEMPLATEDIR)/$$f;\
	done
	@cat MESSAGES

install-scripts:
	for f in $(SCRIPTS); do \
	  $(INSTALL) -m 555 $$f $(bindir)/$$f;\
	done

uninstall:
	$(KAHUA_INSTALL) -U $(KAHUACONFIG) -t static $(STATICFILES)
	$(KAHUA_INSTALL) -U $(KAHUACONFIG) -t plugin -r $(PLUGINFILE) \
                                        $(PLUGINDIR)/$(PLUGINFILE)

uninstall-scripts:
	$(KAHUA_INSTALL) -U $(KAHUACONFIG) -t script $(SCRIPTFILES)

distclean: clean
	-rm -rf $(CONFIG_GENERATED)

maintainer-clean: clean
	-rm -rf $(CONFIG_GENERATED) configure VERSION DIST_EXCLUDE_X
